---
import { changeLanguage } from "i18next";
import Layout from "../layouts/Layout.astro";
import "../styles/index.css";
import classNames from "classnames";
import { NPM } from "../assets/svgs/NPM";
import { GithubLight } from "../assets/svgs/GithubLight";
import { VsCodeLight } from "../assets/svgs/VsCode";
import Divider from "../components/Divider.astro";
import Title from "../components/Title.astro";
import { WebSite } from "../assets/svgs/Website";

changeLanguage("en");

interface Projects {
  title: string;
  links: Array<{
    name: string;
    link: string;
  }>;
  languages: string[];
  description: string;
}
const projects: Projects[] = [
  {
    title: "React CSS Modules",
    languages: ["typescript", "node js", "vs code"],
    links: [
      {
        name: "Github",
        link: "https://github.com/Viijay-Kr/react-ts-css",
      },
      {
        name: "vscode",
        link: "https://marketplace.visualstudio.com/items?itemName=viijay-kr.react-ts-css",
      },
    ],
    description:
      "VS Code extension that enables CSS modules support in Typescript based React projects.",
  },
  {
    title: "Typescript cleanup Definitions",
    links: [
      {
        name: "Github",
        link: "https://github.com/Viijay-Kr/typescript-cleanup-defs",
      },
      {
        name: "NPM",
        link: "https://www.npmjs.com/package/typescript-cleanup-definitions",
      },
    ],
    languages: ["typescript", "node js", "plugin"],
    description: "A small TS plugin to refine definition results in VS Code",
  },
  {
    title: "MarkDoc Traverse",
    links: [
      {
        name: "Github",
        link: "https://github.com/Viijay-Kr/markdoc-traverse",
      },
      {
        name: "NPM",
        link: "https://www.npmjs.com/package/markdoc-traverse",
      },
    ],
    languages: ["typescript", "node js"],
    description: "A small traversal library for MarkDoc's AST",
  },
  {
    title: "React Dev Docs",
    languages: ["typescript", "node js", "vs code"],
    links: [
      {
        name: "Github",
        link: "https://github.com/Viijay-Kr/learn-react",
      },
      {
        name: "vscode",
        link: "https://marketplace.visualstudio.com/items?itemName=viijay-kr.react-docs",
      },
    ],
    description:
      "VS Code extension that enables browsing react.dev docs directly inside VS Code.",
  },
  {
    title: "CSS Scanner",
    links: [
      {
        name: "Github",
        link: "https://github.com/Viijay-Kr/browser-scan/tree/main/apps/scanner-app",
      },
      {
        name: "NPM",
        link: "https://www.npmjs.com/package/@browser-scan/scanner-app",
      },
    ],
    languages: ["typescript", "node js", "react", "chakra-ui"],
    description:
      "A end to end application that can scan CSS files in your project and list the non compatible CSS properties against a browser of your choice",
  },
  {
    title: "My Own Insights",
    links: [
      {
        name: "site",
        link: "https://analytics.vijayakrishna.dev/",
      },
    ],
    languages: ["typescript", "react", "nextjs", "vercel", "mongodb"],
    description:
      "A hobby project built with Next JS , MonogoDB and Vercel's serverless functions to track insights such as page views,clicks on my website and blog",
  },
  {
    title: "Feature Contribution to VS code",
    links: [
      {
        name: "Github",
        link: "https://github.com/microsoft/vscode/pull/169819",
      },
      {
        name: "vscode",
        link: "https://code.visualstudio.com/updates/v1_76#_thank-you",
      },
    ],
    description: "First VS code feature contribution.",
    languages: ["typescript", "node js", "vs code"],
  },
  {
    title: "My Website",
    links: [],
    languages: ["typescript", "react", "astro", "tailwindcss", "netlify"],
    description: "My portfolio website. An alternative to PDF's",
  },
  {
    title: "My Blog",
    links: [
      {
        name: "site",
        link: "https://blogs.vijayakrishna.dev",
      },
    ],
    languages: [
      "typescript",
      "react",
      "astro",
      "tailwindcss",
      "netlify",
      "markdoc",
      "astro-themes",
    ],
    description:
      "My blog site built with Astro themes(Blogster) and MarkDoc for content",
  },
];
---

<section class="mb-1">
  <Title title="Some things I've done" />
  <ul
    class="mt-1 px-2 flex flex-col gap-1 lg:grid lg:grid-cols-2 lg:gap-1.5 lg:px-0 list-disc"
  >
    {
      projects.map(({ title, description, languages, links }, index) => (
        <li>
          <div class="flex flex-col gap-0.5">
            <div class="flex flex-col md:flex-row gap-0.5 md:items-center">
              <h2 class="text-xl md:text-xl font-bold text-amber-700 dark:text-light-blue">
                {title}
              </h2>
              <div class="flex flex-row flex-wrap items-center gap-0.5">
                {languages.map((lang, index) => (
                  <span
                    class={classNames(
                      "p-0.5 bg-slate-100  text-xs font-medium rounded-2xl",
                      `animate-opacify`,
                      {
                        ["bg-blue-800 text-slate-50"]:
                          lang === "typescript" ||
                          lang === "vs code" ||
                          lang === "plugin",
                        ["bg-green-500 text-slate-800"]:
                          lang === "node js" || lang === "mongodb",
                        ["bg-blue-300 text-slate-800"]: lang === "react",
                        ["bg-green-300 text-slate-800"]:
                          lang === "chakra-ui" || lang === "astro-themes",
                        ["bg-red-500 text-slate-100"]:
                          lang === "astro" || lang === "markdoc",
                        ["bg-cyan-400 text-slate-800"]:
                          lang === "netlify" || lang === "tailwindcss",
                        ["text-slate-100 bg-gray-700"]:
                          lang === "vercel" || lang === "nextjs",
                      }
                    )}
                  >
                    {lang}
                  </span>
                ))}
                {links.length ? (
                  <Divider classnames={["w-[auto] h-[32px]"]} />
                ) : null}
                {links.map(({ link, name }) => (
                  <a
                    title={title}
                    href={link}
                    target="_blank"
                    class="project-links"
                  >
                    {name === "Github" && (
                      <GithubLight className="fill-black dark:fill-amber-50" />
                    )}
                    {name === "vscode" && (
                      <VsCodeLight className="fill-black dark:fill-amber-50" />
                    )}
                    {name === "NPM" && <NPM />}
                    {name === "site" && (
                      <WebSite className="fill-black dark:fill-amber-50" />
                    )}
                  </a>
                ))}
              </div>
            </div>
            <p class="text-base leading-1.25 w-full text-slate-800 dark:text-amber-50 ">
              {description}
            </p>
          </div>
        </li>
      ))
    }
  </ul>
</section>

<script>
  const links = document.querySelectorAll(".project-links");
  links.forEach((el) => {
    const title = el.getAttribute("title") ?? "";
    const href = el.getAttribute("href") ?? "";
    el.addEventListener("click", () => {
      window.Insights.track({
        type: "click",
        meta: {
          title,
          value: href,
          source: "projects",
        },
      });
    });
  });
</script>
