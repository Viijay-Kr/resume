---
import { changeLanguage, t } from "i18next";
import Header from "../../components/Header.astro";
import ReactIcon from "../../assets/svgs/ic-react.svg";
import TypescriptIcon from "../../assets/svgs/ic-typescript.svg";
import NodeJSIcon from "../../assets/svgs/ic-nodejs.svg";
import Divider from "../../components/Divider.astro";
import Navbar from "../../components/Navbar.astro";
import Layout from "../../layouts/Layout.astro";

changeLanguage("de");
---

<Layout title="About me">
  <Header />
  <Navbar />
  <section
    class="flex flex-col gap-0.5 py-1 text-base lg:text-xl text-slate-800 dark:text-amber-50"
  >
    <p>
      {t("about_me.info_1")}
    </p>
    <p>
      {t("about_me.info_3")}
      <br />
      Typescript
      <img class="inline-block" src={TypescriptIcon} width="25" height="25" />
      , React
      <img class="inline-block" src={ReactIcon} width="25" height="25" />
      {t("and")}
      NodeJS
      <img class="inline-block" src={NodeJSIcon} width="25" height="25" />
    </p>
  </section>
  <section
    class="flex w-full flex-col mt-0.5 gap-1 text-slate-800 dark:text-amber-300"
  >
    <h2 class="text-3xl text-amber-700 dark:text-amber-400 font-bold">
      ðŸ’ª {t("about_me.skills")}
    </h2>
    <Divider classnames={["mb-0.5 "]} />
    <section
      class="flex justify-center md:justify-start flex-wrap flex-row gap-1"
    >
      <ul
        class="flex flex-col gap-0.5 text-slate-800 dark:text-amber-50 list-none"
      >
        {
          [
            "Javascript",
            "Typescript",
            "HTML,CSS",
            "NodeJS",
            "React",
            "Git",
          ].map((skill) => (
            <li class="flex flex-row gap-1 text-base md:text-lg items-center">
              <span class="bg-slate-800 dark:bg-amber-400 w-0.5 h-0.5 rounded-lg" />
              <p class="text-slate-800  w-24 dark:text-amber-50">{skill}</p>
              <div class="border-2  flex w-4 border-slate-800 dark:border-amber-400">
                <div class="h-0.5 animate-skill-level-75%  bg-amber-700 dark:bg-amber-200" />
              </div>
            </li>
          ))
        }
      </ul>
      <ul
        class="flex flex-col gap-0.5 text-slate-800 dark:text-amber-50 list-none"
      >
        {
          ["Go lang", "GraphQL", "gRPC"].map((skill) => (
            <li class="flex flex-row gap-1 text-base md:text-lg items-center">
              <span class="bg-slate-800 dark:bg-amber-400 w-0.5 h-0.5 rounded-lg" />
              <p class="text-slate-800 w-20 dark:text-amber-50">{skill}</p>
              <div class="border-2  flex w-4 border-slate-800 dark:border-amber-400">
                <div class="h-0.5 animate-skill-level-50%  bg-amber-700 dark:bg-amber-200" />
              </div>
            </li>
          ))
        }
      </ul>
      <ul
        class="flex flex-col gap-0.5 text-slate-800 dark:text-amber-50 list-none"
      >
        {
          ["Leadership", "Management"].map((skill) => (
            <li class="flex flex-row gap-1 text-base md:text-lg items-center">
              <span class="bg-slate-800 dark:bg-amber-400 w-0.5 h-0.5 rounded-lg" />
              <p class="text-slate-800 w-28 dark:text-amber-50">{skill}</p>
              <div class="border-2  flex w-4 border-slate-800 dark:border-amber-400">
                <div class="h-0.5 animate-skill-level-50%  bg-amber-700 dark:bg-amber-200" />
              </div>
            </li>
          ))
        }
      </ul>
    </section>
  </section>
</Layout>
